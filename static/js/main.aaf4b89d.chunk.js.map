{"version":3,"sources":["lib/editDistance.ts","lib/state.ts","lib/index.tsx","RotatingDemo.tsx","BitcoinDemo.tsx","TextInput.tsx","ConfirmDemo.tsx","SeussDemo.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["EditType","getEdits","s1","s2","distances","edits","i","length","j","push","type","REPLACE","position","token","DELETE","Error","INSERT","readEditsFromTable","l1","l2","width","height","value","result","Array","make2dArray","Math","min","computeEditDistanceTable","transformTo","state","s","tokens","map","t","join","getText","slice","nextKey","forEach","edit","splice","key","applyEdits","Resentence","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ghostRef","createRef","handleVisibilityChange","syncTokens","tokenState","children","split","c","renderedText","undefined","tokenPositions","document","addEventListener","removeEventListener","_this2","_this$props","className","_this$props$speed","speed","_this$state","config","tension","friction","react_default","a","createElement","style","PARENT_STYLE","ref","GHOST_STYLE","web","native","items","keys","getKey","initial","from","opacity","transform","enter","leave","_ref","transitionProps","index","indexOfKey","to","marginLeft","x","marginTop","y","springProps","div","objectSpread","CHILD_STYLE","_this$state2","text","hidden","getTokenPositions","setState","current","tokenCount","firstPosition","getTokenPosition","_this$getTokenPositio","range","createRange","textNode","childNodes","setStart","setEnd","tokenRect","getBoundingClientRect","parentRect","parentCenterX","left","top","PureComponent","color","pointerEvents","userSelect","RotatingDemo","restartInterval","oldProps","interval","window","clearInterval","intervalId","entries","lib_Resentence","classNames","_this$props2","setInterval","PRICES","INTERVAL","BitcoinDemo","RotatingDemo_RotatingDemo","TextInput","handleChange","event","onChange","currentTarget","handleKeyPress","charCode","onSubmit","placeholder","inputGroup","onKeyPress","ConfirmDemo","handleInputChange","inputText","handleUpdate","prevState","trim","initialText","controlGroup","fill","TextInput_TextInput","buttons","Classes","FIXED","disabled","intent","Intent","PRIMARY","onClick","LINES","SeussDemo","App","DARK","href","BitcoinDemo_BitcoinDemo","target","ConfirmDemo_ConfirmDemo","Component","Boolean","location","hostname","match","onFontLoadDone","ReactDOM","render","src_App_0","getElementById","FocusStyleManager","onlyShowFocusOnTabs","WebFont","load","google","families","active","inactive","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aaf4b89d.chunk.js","sourcesContent":["export enum EditType {\n  INSERT = \"INSERT\",\n  REPLACE = \"REPLACE\",\n  DELETE = \"DELETE\",\n}\n\nexport type Edit = InsertEdit | ReplaceEdit | DeleteEdit;\n\nexport interface InsertEdit {\n  type: EditType.INSERT;\n  position: number;\n  token: string;\n}\n\nexport interface ReplaceEdit {\n  type: EditType.REPLACE;\n  position: number;\n  token: string;\n}\n\nexport interface DeleteEdit {\n  type: EditType.DELETE;\n  position: number;\n}\n\nexport function getEdits(s1: string, s2: string): Edit[] {\n  const distances = computeEditDistanceTable(s1, s2);\n  return readEditsFromTable(s1, s2, distances);\n}\n\nfunction computeEditDistanceTable(s1: string, s2: string): number[][] {\n  const l1 = s1.length;\n  const l2 = s2.length;\n  const distances = make2dArray(l1 + 1, l2 + 1, 0);\n  for (let i = 1; i <= l1; i++) {\n    distances[i][0] = i;\n  }\n  for (let j = 1; j <= l2; j++) {\n    distances[0][j] = j;\n  }\n  for (let i = 1; i <= l1; i++) {\n    for (let j = 1; j <= l2; j++) {\n      if (s1[i - 1] === s2[j - 1]) {\n        distances[i][j] = distances[i - 1][j - 1];\n      } else {\n        distances[i][j] =\n          1 +\n          Math.min(\n            distances[i - 1][j - 1],\n            distances[i - 1][j],\n            distances[i][j - 1],\n          );\n      }\n    }\n  }\n  return distances;\n}\n\nfunction readEditsFromTable(\n  s1: string,\n  s2: string,\n  distances: number[][],\n): Edit[] {\n  const edits: Edit[] = [];\n  let i = s1.length;\n  let j = s2.length;\n  while (i > 0 || j > 0) {\n    if (i > 0 && j > 0 && s1[i - 1] === s2[j - 1]) {\n      i--;\n      j--;\n    } else if (\n      i > 0 &&\n      j > 0 &&\n      distances[i][j] === distances[i - 1][j - 1] + 1\n    ) {\n      edits.push({ type: EditType.REPLACE, position: i - 1, token: s2[j - 1] });\n      i--;\n      j--;\n    } else if (i > 0 && distances[i][j] === distances[i - 1][j] + 1) {\n      edits.push({ type: EditType.DELETE, position: i - 1 });\n      i--;\n    } else if (j > 0 && distances[i][j] === distances[i][j - 1] + 1) {\n      edits.push({ type: EditType.INSERT, position: i, token: s2[j - 1] });\n      j--;\n    } else {\n      throw new Error(\"Invalid distances table\");\n    }\n  }\n  return edits;\n}\n\nfunction make2dArray<T>(width: number, height: number, value: T): T[][] {\n  const result: T[][] = Array(width);\n  for (let i = 0; i < width; i++) {\n    result[i] = Array(height);\n    for (let j = 0; j < height; j++) {\n      result[i][j] = value;\n    }\n  }\n  return result;\n}\n","import { Edit, EditType, getEdits } from \"./editDistance\";\n\nexport interface TokenState {\n  tokens: KeyedToken[];\n  nextKey: number;\n}\n\nexport interface KeyedToken {\n  key: number;\n  token: string;\n}\n\nexport function makeTokenState(s: string): TokenState {\n  const tokens = s.split(\"\").map((c, i) => ({ key: i, token: c }));\n  return { tokens, nextKey: s.length };\n}\n\nexport function transformTo(state: TokenState, s: string): TokenState {\n  const edits = getEdits(getText(state), s);\n  return applyEdits(state, edits);\n}\n\nexport function getText(state: TokenState): string {\n  return state.tokens.map(t => t.token).join(\"\");\n}\n\nfunction applyEdits(state: TokenState, edits: Edit[]): TokenState {\n  // This runs in quadratic time, but since computing the edits takes\n  // quadratic time anyways it's not important to optimize.\n  if (edits.length === 0) {\n    return state;\n  }\n  const tokens = state.tokens.slice();\n  let { nextKey } = state;\n  edits.forEach(edit => {\n    switch (edit.type) {\n      case EditType.INSERT: {\n        const { position, token } = edit;\n        tokens.splice(position, 0, { token, key: nextKey++ });\n        break;\n      }\n      case EditType.REPLACE: {\n        const { position, token } = edit;\n        tokens.splice(position, 1, { token, key: nextKey++ });\n        break;\n      }\n      case EditType.DELETE: {\n        const { position } = edit;\n        tokens.splice(position, 1);\n        break;\n      }\n      default:\n        ((_: never) => 0)(edit);\n    }\n  });\n  return { tokens, nextKey };\n}\n","import React, { createRef, CSSProperties, PureComponent } from \"react\";\nimport { animated, Spring, SpringConfig, Transition } from \"react-spring\";\nimport { KeyedToken, makeTokenState, TokenState, transformTo } from \"./state\";\n\nexport interface ResentenceProps {\n  className?: string;\n  children: string | number;\n  speed?: number;\n}\n\ninterface State {\n  tokenState: TokenState;\n  renderedText: string | undefined;\n  tokenPositions: Position[];\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nexport default class Resentence extends PureComponent<ResentenceProps, State> {\n  private ghostRef = createRef<HTMLDivElement>();\n\n  constructor(props: ResentenceProps) {\n    super(props);\n    this.state = {\n      tokenState: makeTokenState(props.children + \"\"),\n      renderedText: undefined,\n      tokenPositions: [],\n    };\n  }\n\n  public componentDidMount(): void {\n    this.syncTokens();\n    document.addEventListener(\"visibilitychange\", this.handleVisibilityChange);\n  }\n\n  public componentDidUpdate(): void {\n    this.syncTokens();\n  }\n\n  public componentWillUnmount(): void {\n    document.removeEventListener(\n      \"visibilitychange\",\n      this.handleVisibilityChange,\n    );\n  }\n\n  public render(): JSX.Element {\n    const { className, children, speed = 1 } = this.props;\n    const { tokenState, tokenPositions } = this.state;\n    const config: SpringConfig = {\n      tension: speed * speed * 170,\n      friction: speed * 26,\n    };\n    return (\n      <div className={className} style={PARENT_STYLE}>\n        <div ref={this.ghostRef} style={GHOST_STYLE}>\n          {children}\n        </div>\n        {tokenPositions.length > 0 && (\n          <Transition\n            native={true}\n            items={tokenState.tokens}\n            keys={getKey}\n            initial={null}\n            config={config}\n            from={{ opacity: 0, transform: \"scale(0)\" }}\n            enter={{ opacity: 1, transform: \"scale(1)\" }}\n            leave={{ opacity: 0, transform: \"scale(0)\" }}\n          >\n            {({ key, token }) => transitionProps => {\n              const index = this.indexOfKey(key);\n              return (\n                <Spring\n                  native={true}\n                  config={config}\n                  to={\n                    index != null\n                      ? {\n                          marginLeft: tokenPositions[index].x,\n                          marginTop: tokenPositions[index].y,\n                        }\n                      : {}\n                  }\n                >\n                  {springProps => (\n                    <animated.div\n                      style={{\n                        ...CHILD_STYLE,\n                        ...transitionProps,\n                        ...springProps,\n                      }}\n                    >\n                      {token}\n                    </animated.div>\n                  )}\n                </Spring>\n              );\n            }}\n          </Transition>\n        )}\n      </div>\n    );\n  }\n\n  private syncTokens(): void {\n    const { children } = this.props;\n    const { tokenState, renderedText } = this.state;\n    const text = children + \"\";\n    if (!document.hidden && text !== renderedText) {\n      const tokenPositions = this.getTokenPositions();\n      if (tokenPositions) {\n        this.setState({\n          tokenPositions,\n          tokenState: transformTo(tokenState, text),\n          renderedText: text,\n        });\n      }\n    }\n  }\n\n  private indexOfKey(key: number): number | undefined {\n    const { tokens } = this.state.tokenState;\n    for (let i = 0, length = tokens.length; i < length; i++) {\n      if (tokens[i].key === key) {\n        return i;\n      }\n    }\n    return undefined;\n  }\n\n  private getTokenPositions(): Position[] | undefined {\n    const { children } = this.props;\n    const div = this.ghostRef.current;\n    if (!div) {\n      return undefined;\n    }\n    // The y-position of tokens, as measured below, is slightly off from the\n    // container for reasons unknown. Calibrate by treating the y-position of\n    // the first character as 0.\n    const tokenCount = (children + \"\").length;\n    if (tokenCount === 0) {\n      return [];\n    }\n    const firstPosition = this.getTokenPosition(div, 0);\n    const result: Position[] = [{ ...firstPosition, y: 0 }];\n    for (let i = 1; i < tokenCount; i++) {\n      const { x, y } = this.getTokenPosition(div, i);\n      result.push({ x, y: y - firstPosition.y });\n    }\n    return result;\n  }\n\n  private getTokenPosition(div: HTMLDivElement, index: number): Position {\n    const range = document.createRange();\n    const textNode = div.childNodes[0];\n    range.setStart(textNode, index);\n    range.setEnd(textNode, index + 1);\n    const tokenRect = range.getBoundingClientRect();\n    const parentRect = div.getBoundingClientRect();\n    const parentCenterX = parentRect.left + parentRect.width / 2;\n    return {\n      x: tokenRect.left - parentCenterX,\n      y: tokenRect.top - parentRect.top,\n    };\n  }\n\n  private handleVisibilityChange = (): void => {\n    this.syncTokens();\n  };\n}\n\nfunction getKey(token: KeyedToken): number {\n  return token.key;\n}\n\nconst PARENT_STYLE: CSSProperties = { position: \"relative\" };\nconst GHOST_STYLE: CSSProperties = { color: \"transparent\" };\nconst CHILD_STYLE: CSSProperties = {\n  position: \"absolute\",\n  left: \"50%\",\n  top: 0,\n  pointerEvents: \"none\",\n  userSelect: \"none\",\n};\n","import classNames from \"classnames\";\nimport React, { PureComponent } from \"react\";\nimport Resentence from \"./lib/index\";\n\ninterface Props {\n  className?: string;\n  entries: string[];\n  interval: number;\n}\n\ninterface State {\n  index: number;\n}\n\nexport default class RotatingDemo extends PureComponent<Props, State> {\n  public readonly state: State = { index: 0 };\n  private intervalId: number | undefined;\n\n  public componentDidMount(): void {\n    this.restartInterval();\n  }\n\n  public componentDidUpdate(oldProps: Props): void {\n    if (oldProps.interval !== this.props.interval) {\n      this.restartInterval();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    window.clearInterval(this.intervalId);\n  }\n\n  public render(): JSX.Element | null {\n    const { className, entries } = this.props;\n    const { index } = this.state;\n    if (entries.length === 0) {\n      return null;\n    }\n    return (\n      <Resentence className={classNames(\"demo-readout\", className)}>\n        {entries[index % entries.length]}\n      </Resentence>\n    );\n  }\n\n  private restartInterval(): void {\n    const { entries, interval } = this.props;\n    window.clearInterval(this.intervalId);\n    this.intervalId = window.setInterval(\n      () =>\n        this.setState(({ index }) => ({ index: (index + 1) % entries.length })),\n      interval,\n    );\n  }\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport \"./BitcoinDemo.scss\";\nimport RotatingDemo from \"./RotatingDemo\";\n\ninterface Props {\n  className?: string;\n}\n\nconst PRICES = [\n  \"$6,440.97\",\n  \"$10,198.60\",\n  \"$14,112.20\",\n  \"$10,237.30\",\n  \"$10,385.00\",\n  \"$7,003.06\",\n  \"$9,251.47\",\n  \"$7,500.70\",\n  \"$6,411.68\",\n];\n\nconst INTERVAL = 1250;\n\nexport default function BitcoinDemo({ className }: Props): JSX.Element {\n  return (\n    <div className={classNames(\"bitcoin-demo-container\", className)}>\n      <RotatingDemo\n        className=\"bitcoin-demo-readout\"\n        entries={PRICES}\n        interval={INTERVAL}\n      />\n    </div>\n  );\n}\n","import { InputGroup } from \"@blueprintjs/core\";\nimport React, { ChangeEvent, KeyboardEvent, PureComponent } from \"react\";\n\ninterface Props {\n  className?: string;\n  value: string;\n  placeholder?: string;\n  onChange(value: string): void;\n  onSubmit?(): void;\n}\n\nexport default class TextInput extends PureComponent<Props> {\n  public render(): JSX.Element {\n    const { className, value, placeholder, onSubmit } = this.props;\n    return (\n      <InputGroup\n        className={className}\n        value={value}\n        placeholder={placeholder}\n        onChange={this.handleChange}\n        onKeyPress={this.handleKeyPress}\n      />\n    );\n  }\n\n  private handleChange = (event: ChangeEvent<HTMLInputElement>): void =>\n    this.props.onChange(event.currentTarget.value);\n\n  private handleKeyPress = (event: KeyboardEvent<HTMLInputElement>): void => {\n    if (event.charCode === 13 && this.props.onSubmit) {\n      this.props.onSubmit();\n    }\n  };\n}\n","import { Button, Classes, ControlGroup, Intent } from \"@blueprintjs/core\";\nimport classNames from \"classnames\";\nimport React, { PureComponent } from \"react\";\nimport \"./ConfirmDemo.scss\";\nimport Resentence from \"./lib/index\";\nimport TextInput from \"./TextInput\";\n\ninterface Props {\n  className?: string;\n  initialText: string;\n}\n\ninterface State {\n  text: string;\n  inputText: string;\n}\n\nexport default class ConfirmDemo extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    const { initialText } = props;\n    this.state = { text: initialText, inputText: initialText };\n  }\n\n  public render(): JSX.Element {\n    const { className } = this.props;\n    const { text, inputText } = this.state;\n    return (\n      <div className={classNames(\"confirm-demo\", className)}>\n        <Resentence className=\"demo-readout\">{text}</Resentence>\n        <ControlGroup className=\"controls\" fill={true}>\n          <TextInput\n            className=\"input\"\n            value={inputText}\n            placeholder=\"Enter text and press Update…\"\n            onChange={this.handleInputChange}\n            onSubmit={this.handleUpdate}\n          />\n          <Button\n            className={Classes.FIXED}\n            disabled={!inputText.trim()}\n            text=\"Update\"\n            intent={Intent.PRIMARY}\n            onClick={this.handleUpdate}\n          />\n        </ControlGroup>\n      </div>\n    );\n  }\n\n  private handleInputChange = (inputText: string): void =>\n    this.setState({ inputText });\n\n  private handleUpdate = (): void => {\n    this.setState(prevState => {\n      const text = prevState.inputText.trim();\n      return text ? { text, inputText: text } : null;\n    });\n  };\n}\n","import React from \"react\";\nimport RotatingDemo from \"./RotatingDemo\";\n\ninterface Props {\n  className?: string;\n}\n\nconst LINES = [\n  \"One fish\",\n  \"Two fish\",\n  \"Red fish\",\n  \"Blue fish.\",\n  \"Black fish\",\n  \"Blue fish\",\n  \"Old fish\",\n  \"New fish.\",\n  \"This one has a little star.\",\n  \"This one has a little car.\",\n  \"Say! What a lot\",\n  \"Of fish there are.\",\n  \"Yes. Some are red.\",\n  \"And some are blue.\",\n  \"Some are old.\",\n  \"And some are new.\",\n  \"Some are sad.\",\n  \"And some are glad.\",\n  \"And some are very, very bad.\",\n  // Repeat last line so it displays twice as long.\n  \"And some are very, very bad.\",\n];\n\nconst INTERVAL = 1250;\n\nexport default function SeussDemo({ className }: Props): JSX.Element {\n  return (\n    <RotatingDemo className={className} entries={LINES} interval={INTERVAL} />\n  );\n}\n","import { Classes } from \"@blueprintjs/core\";\nimport classNames from \"classnames\";\nimport React, { Component } from \"react\";\nimport \"./App.scss\";\nimport BitcoinDemo from \"./BitcoinDemo\";\nimport ConfirmDemo from \"./ConfirmDemo\";\nimport SeussDemo from \"./SeussDemo\";\n\nclass App extends Component {\n  public render() {\n    return (\n      <div className={classNames(Classes.DARK, \"app\")}>\n        <h1 className=\"app-title\">Resentence</h1>\n        <p className=\"app-explanation\">\n          Easy-to-use React component for morphing one string into another.{\" \"}\n          <a href=\"https://github.com/dphilipson/resentence\">GitHub</a>\n        </p>\n        <SeussDemo className=\"app-seuss-demo\" />\n        <h3 className=\"app-section-header\">\n          Smoothly transition text in any style\n        </h3>\n        <p className=\"app-section-body\">\n          Use ordinary CSS to layout and style your text however you want, then\n          wrap it in a Resentence component to animate its changes. Note the\n          right-alignment in the following example, which works well for\n          displaying numbers.\n        </p>\n        <BitcoinDemo className=\"app-bitcoin-demo\" />\n        <p className=\"app-bitcoin-explanation\">\n          Monthly Bitcoin prices, Nov 2017 — Jul 2018\n        </p>\n        <h3 className=\"app-section-header\">Display updates intuitively</h3>\n        <p className=\"app-section-body\">\n          Resentence will find the transformation from one string to the next\n          which uses the fewest edits (as defined by{\" \"}\n          <a\n            href=\"https://en.wikipedia.org/wiki/Levenshtein_distance\"\n            target=\"_blank\"\n          >\n            Levenschtein distance\n          </a>\n          ), then animate those edits in a visually intuitive way. You can\n          experiment with different edit types using the interactive demo below.\n        </p>\n        <ConfirmDemo className=\"app-confirm-demo\" initialText=\"Edit me…\" />\n        <h3 className=\"app-section-header\">Simple to use</h3>\n        <p className=\"app-section-body\">\n          Using Resentence is as easy as wrapping your text in a{\" \"}\n          <code>&lt;Resentence&gt;</code> component, with no additional\n          integration required.{\" \"}\n          <a href=\"https://github.com/dphilipson/resentence\">\n            See the GitHub repo\n          </a>{\" \"}\n          for details.\n        </p>\n        <p className=\"app-section-body app-copyright\">\n          Copyright © 2019 David Philipson\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n// tslint:disable\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { FocusStyleManager } from \"@blueprintjs/core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WebFont from \"webfontloader\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nFocusStyleManager.onlyShowFocusOnTabs();\nWebFont.load({\n  google: { families: [\"Noto Sans\", \"Open Sans\"] },\n  active: onFontLoadDone,\n  inactive: onFontLoadDone,\n});\n\nfunction onFontLoadDone(): void {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}